{"version":3,"sources":["Environments/environment.ts","Common/Hooks/LocalStorage/UseLocalStorage.tsx","Common/Hooks/Youtube/LogoutYoutube.tsx","Common/Components/Videos.tsx","Pages/home.tsx","Pages/youtube.tsx","Pages/twitch.tsx","Common/Hooks/Youtube/LoginYoutube.tsx","Common/Utils/RefreshYoutube.tsx","Pages/login.tsx","Pages/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["environment","UseLocalStorage","key","defaultValue","useState","JSON","parse","localStorage","getItem","getStorageValue","value","setValue","useEffect","setItem","stringify","clientId","LogoutYoutube","history","useHistory","signOut","useGoogleLogout","onLogoutSuccess","res","clear","push","onFailure","console","log","onClick","className","src","alt","Videos","videos","items","map","item","index","href","contentDetails","videoId","snippet","thumbnails","maxres","url","high","title","channelTitle","publishedAt","Home","local","Object","keys","length","localData","setSubData","subVideos","setSubVideos","fetchData","then","data","newItemCount","fetchVideos","resourceId","channelId","old","to","playListId","substring","options","crossDomain","method","headers","Headers","Authorization","accessToken","Accept","fetch","response","json","responseJson","profileObj","name","Youtube","Twitch","LoginYoutube","setYoutubeLocal","useGoogleLogin","onSuccess","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","id_token","setTimeout","refreshYoutubeTokenSetup","alert","isSignedIn","accessType","scope","signIn","Login","Webpages","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e75eeffe.chunk.js","sourcesContent":["export const environment = {\r\n  youtubeClientId:\r\n    \"401443293564-80rhc66onvqaf7g73ibrk93o6uci5c1a.apps.googleusercontent.com\",\r\n  youtubeSecret: \"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\",\r\n  youtubeApiKey: \"AIzaSyDnGCHStLetIN8L7Df7DK8-TgPc8A6iXCM\",\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getStorageValue(key: string, defaultValue: any) {\r\n  // getting stored value\r\n\r\n  const saved = JSON.parse(localStorage.getItem(key) || \"{}\");\r\n  return saved || defaultValue;\r\n}\r\n\r\nexport const UseLocalStorage = (key: string, defaultValue: any) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    // storing input name\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { environment } from \"Environments/environment\";\r\nimport React from \"react\";\r\nimport { useGoogleLogout } from \"react-google-login\";\r\nimport { UseLocalStorage } from \"Common/Hooks/LocalStorage/UseLocalStorage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst clientId = environment.youtubeClientId;\r\nfunction LogoutYoutube() {\r\n  const [youtubeLocal, setYoutubeLocal] = UseLocalStorage(\"YoutubeLocal\", {});\r\n  const history = useHistory();\r\n  const onLogoutSuccess = (res?: any) => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const onFailure = () => {\r\n    console.log(\"Handle failure cases\");\r\n  };\r\n\r\n  const { signOut } = useGoogleLogout({\r\n    clientId,\r\n    onLogoutSuccess,\r\n    onFailure,\r\n  });\r\n\r\n  return (\r\n    <button onClick={signOut} className=\"button\">\r\n      <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n      <span className=\"buttonText\">Sign out</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LogoutYoutube;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\ninterface playlistResponse {\r\n  videos: { items: playlistItem[] };\r\n}\r\ninterface playlistItem {\r\n  contentDetails: { videoId: string };\r\n  snippet: {\r\n    thumbnails: { maxres?: { url: string }; high?: { url: string } };\r\n    title: string;\r\n    channelTitle: string;\r\n    publishedAt: Date;\r\n  };\r\n}\r\nconst Videos: FC<playlistResponse> = ({ videos }) => {\r\n  useEffect(() => {});\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {videos.items.map((item, index) => (\r\n          <a\r\n            className=\"video\"\r\n            href={\r\n              \"https://www.youtube.com/watch?v=\" + item.contentDetails.videoId\r\n            }\r\n          >\r\n            <img\r\n              src={\r\n                item.snippet.thumbnails.maxres?.url ||\r\n                item.snippet.thumbnails.high?.url\r\n              }\r\n              alt={item.snippet.title}\r\n            />\r\n            <p className=\"video__title\">{item.snippet.title}</p>\r\n            <p>\r\n              {item.snippet.channelTitle} - {item.snippet.publishedAt}\r\n            </p>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","import LogoutYoutube from \"Common/Hooks/Youtube/LogoutYoutube\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { environment } from \"Environments/environment\";\r\nimport Videos from \"Common/Components/Videos\";\r\ninterface youtubeSubResponse {\r\n  items: youtubeSubItem[];\r\n}\r\ninterface youtubeSubItem {\r\n  contentDetails: { newItemCount: number; totalItemCount: number };\r\n  snippet: { title: string; resourceId: { channelId: string } };\r\n}\r\n\r\nconst Home: FC = () => {\r\n  const [localData, setLocalData] = useState(() => {\r\n    const local = JSON.parse(localStorage.getItem(\"YoutubeLocal\") || \"{}\");\r\n    if (Object.keys(local).length === 0) {\r\n      return false;\r\n    }\r\n    console.log(local);\r\n    return local;\r\n  });\r\n  const [subData, setSubData] = useState({});\r\n  const [subVideos, setSubVideos] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    if (!localData) return;\r\n    fetchData().then((data: youtubeSubResponse) => {\r\n      setSubData(data);\r\n      console.log(data);\r\n      data.items.map((item) => {\r\n        if (item.contentDetails.newItemCount > 0) {\r\n          fetchVideos(item.snippet.resourceId.channelId).then((res) => {\r\n            setSubVideos((old) => [...old, res]);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n  if (!localData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const fetchVideos = (channelId: string) => {\r\n    let playListId = \"UU\" + channelId.substring(2);\r\n    let url = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails%2Cstatus&playlistId=${playListId}&key=${environment.youtubeApiKey} HTTP/1.1`;\r\n    let options = {\r\n      crossDomain: true,\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + localData.accessToken,\r\n        Accept: \"application/json\",\r\n      }),\r\n    };\r\n    return fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        return responseJson;\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    let url = `https://youtube.googleapis.com/youtube/v3/subscriptions?part=snippet%2CcontentDetails&mine=true&key=${environment.youtubeApiKey}`;\r\n    let options = {\r\n      crossDomain: true,\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + localData.accessToken,\r\n        Accept: \"application/json\",\r\n      }),\r\n    };\r\n    return fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        return responseJson;\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <LogoutYoutube />\r\n      <div className=\"\">{localData.profileObj.name}</div>\r\n      {subVideos.map((item, index) => (\r\n        <Videos videos={item} key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { FC, useState } from \"react\";\r\n\r\nimport LogoutYoutube from \"Common/Hooks/Youtube/LogoutYoutube\";\r\nconst Youtube: FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <LogoutYoutube />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Youtube;\r\n","import React, { FC } from \"react\";\r\n\r\nconst Twitch: FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"\">Twitch</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Twitch;\r\n","import React, { useEffect } from \"react\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { environment } from \"Environments/environment\";\r\nimport { refreshYoutubeTokenSetup } from \"Common/Utils/RefreshYoutube\";\r\nimport { UseLocalStorage } from \"Common/Hooks/LocalStorage/UseLocalStorage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst scope = \"https://www.googleapis.com/auth/youtube\";\r\nconst clientId = environment.youtubeClientId;\r\nconst LoginYoutube = () => {\r\n  const [youtubeLocal, setYoutubeLocal] = UseLocalStorage(\"YoutubeLocal\", {});\r\n  const history = useHistory();\r\n  const onSuccess = (res: any) => {\r\n    // console.log(\"Login Success: currentUser:\", res.profileObj);\r\n    setYoutubeLocal(res);\r\n    refreshYoutubeTokenSetup(res);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  function onFailure(res: any) {\r\n    console.log(\"Login failed: res:\", res);\r\n    alert(\r\n      `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\r\n    );\r\n  }\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId,\r\n    isSignedIn: true,\r\n    accessType: \"offline\",\r\n    scope,\r\n    // responseType: 'code',\r\n    // prompt: 'consent',\r\n  });\r\n\r\n  return (\r\n    <button onClick={signIn} className=\"button\">\r\n      <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n      <span className=\"buttonText\">Sign in with Google</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginYoutube;\r\n","export const refreshYoutubeTokenSetup = (res: any) => {\r\n  // Timing to renew access token\r\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n  const refreshToken = async () => {\r\n    const newAuthRes = await res.reloadAuthResponse();\r\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n    console.log(\"newAuthRes:\", newAuthRes);\r\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    localStorage.setItem(\"authToken\", newAuthRes.id_token);\r\n\r\n    // Setup the other timer after the first one\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };\r\n\r\n  // Setup first refresh timer\r\n  setTimeout(refreshToken, refreshTiming);\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport LoginYoutube from \"../Common/Hooks/Youtube/LoginYoutube\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Login: FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <LoginYoutube />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","//file: src/webpages/index.jsimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport Youtube from \"./youtube\";\r\nimport Twitch from \"./twitch\";\r\nimport Login from \"./login\";\r\nconst Webpages = () => {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/twitch\" component={Twitch} />\r\n      <Route exact path=\"/youtube\" component={Youtube} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n    </Router>\r\n  );\r\n};\r\nexport default Webpages;\r\n","import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Webpages from \"./Pages\";\nfunction App() {\n  return (\n    <div>\n      <p>test</p>\n      <Webpages />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}